on:
  push:
  workflow_dispatch:
  repository_dispatch:
    types: [release-published]

jobs:
  deploy:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      deployments: write
    name: Deploy to Cloudflare Pages
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - uses: actions/setup-node@v4
        with:
          node-version-file: ".node-version"
          cache: npm

      - run: npm ci

      - name: Fetch latest SmoothCSV version
        id: fetch-version
        run: |
          LATEST_RELEASE=$(curl -s https://api.github.com/repos/kohii/smoothcsv3/releases/latest)
          VERSION=$(echo $LATEST_RELEASE | jq -r .tag_name | sed 's/^v//')
          if [ -z "$VERSION" ] || [ "$VERSION" = "null" ]; then
            echo "Error: Failed to fetch valid version number"
            exit 1
          fi
          echo "VERSION=$VERSION" >> $GITHUB_OUTPUT
          echo "Latest SmoothCSV version: $VERSION"

      - name: Lint
        run: npm run lint

      - name: Test
        run: npm run test

      - name: Extract branch name
        shell: bash
        run: echo "branch=${GITHUB_REF#refs/heads/}" >> $GITHUB_OUTPUT
        id: extract_branch

      - name: Debug env var
        run: echo "PUBLIC_SMOOTHCSV_VERSION=${{ steps.fetch-version.outputs.VERSION }}"

      - name: Build for production
        run: npm run build
        if: steps.extract_branch.outputs.branch == 'main'
        env:
          PUBLIC_SMOOTHCSV_VERSION: ${{ steps.fetch-version.outputs.VERSION }}

      - name: Build for non-production
        run: npm run build -- --site="https://${{ steps.extract_branch.outputs.branch }}.smoothcsv-website.pages.dev/"
        if: steps.extract_branch.outputs.branch != 'main'
        env:
          PUBLIC_SMOOTHCSV_VERSION: ${{ steps.fetch-version.outputs.VERSION }}

      - name: Deploy
        run: npm run wrangler -- pages deploy dist --project-name smoothcsv-website --branch "${{ steps.extract_branch.outputs.branch }}" --commit-hash ${{ github.sha }}
        if: github.repository == 'kohii/smoothcsv-website'
        env:
          CLOUDFLARE_ACCOUNT_ID: ${{ secrets.CLOUDFLARE_ACCOUNT_ID }}
          CLOUDFLARE_API_TOKEN: ${{ secrets.CLOUDFLARE_API_TOKEN }}

      - name: Validate download links
        run: node scripts/validate-download-links.mjs
        if: steps.extract_branch.outputs.branch == 'main'
